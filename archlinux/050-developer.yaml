---
- name: Configure developer environment
  hosts: all
  vars:
    - node_version: 18
    - terraform_version: 1.4.6
  tasks:

    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Check if node is installed
      ansible.builtin.shell: >
        ls {{ ansible_env.HOME }}/.nvm/versions/node | grep {{ item }}
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
      loop:
        - "{{ node_version }}"
      register: node_installed

    - name: Install node
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ item }} && nvm install-latest-npm && nvm use {{ item }}
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/versions/{{ item }}"
      loop:
        - "{{ node_version }}"
      when: not node_installed.results[0].stdout

    - name: Find npm binary
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && whereis npm | cut -d " " -f2
      register: npm_bin_path

    - name: Install yarn
      community.general.npm:
        name: yarn
        global: yes
        state: present
        executable: "{{ npm_bin_path.stdout }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ npm_bin_path.stdout | dirname }}"

    - name: Install tfenv
      kewlfft.aur.aur:
        use: yay
        name: tfenv

    - name: Install terraform with tfenv
      shell: tfenv install latest && tfenv use latest
